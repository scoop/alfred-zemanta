<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>bundleid</key>
	<string>com.patricklenz.zemanta</string>
	<key>connections</key>
	<dict>
		<key>02FB568E-3491-4B27-8D25-8E5D1E39C117</key>
		<array>
			<dict>
				<key>destinationuid</key>
				<string>4A3C0EB8-C797-4B40-9FBB-AB9A7A7F9464</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
			</dict>
		</array>
		<key>06C9C4A9-38CE-441A-8D06-E2F2D8B39B60</key>
		<array>
			<dict>
				<key>destinationuid</key>
				<string>F30D875C-047D-4E58-ABB7-EBAD9A6FCD05</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
			</dict>
			<dict>
				<key>destinationuid</key>
				<string>289F82C2-5720-480D-93E8-4A074ED910CE</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
			</dict>
		</array>
		<key>153297E6-6820-4EAC-9D8F-3B8ACDBEFF8F</key>
		<array>
			<dict>
				<key>destinationuid</key>
				<string>06C9C4A9-38CE-441A-8D06-E2F2D8B39B60</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
			</dict>
		</array>
		<key>4A3C299C-DE79-4240-9A52-5E90D0DA5EA1</key>
		<array>
			<dict>
				<key>destinationuid</key>
				<string>6CB930AD-9D72-4B4A-8789-640BBF36FBEB</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
			</dict>
			<dict>
				<key>destinationuid</key>
				<string>D552693D-CC52-4AD8-98A6-AB7E6319C5FD</string>
				<key>modifiers</key>
				<integer>1048576</integer>
				<key>modifiersubtext</key>
				<string>Open the Zementa site in your browser</string>
			</dict>
		</array>
		<key>6CB930AD-9D72-4B4A-8789-640BBF36FBEB</key>
		<array>
			<dict>
				<key>destinationuid</key>
				<string>D697602E-E2AF-4500-8F66-54DC1D3D631F</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
			</dict>
		</array>
		<key>923425B1-DD7D-4BC1-B930-6708F4083650</key>
		<array>
			<dict>
				<key>destinationuid</key>
				<string>02FB568E-3491-4B27-8D25-8E5D1E39C117</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
			</dict>
		</array>
	</dict>
	<key>createdby</key>
	<string>Patrick Lenz</string>
	<key>description</key>
	<string>Send local text content to Zemanta for semantic tagging</string>
	<key>disabled</key>
	<false/>
	<key>name</key>
	<string>Zemanta Tagging</string>
	<key>objects</key>
	<array>
		<dict>
			<key>config</key>
			<dict>
				<key>autopaste</key>
				<false/>
				<key>clipboardtext</key>
				<string></string>
			</dict>
			<key>type</key>
			<string>alfred.workflow.output.clipboard</string>
			<key>uid</key>
			<string>289F82C2-5720-480D-93E8-4A074ED910CE</string>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>anchorfields</key>
				<true/>
				<key>daterange</key>
				<integer>0</integer>
				<key>fields</key>
				<array>
					<dict>
						<key>field</key>
						<string>kMDItemDisplayName</string>
						<key>not</key>
						<false/>
						<key>split</key>
						<true/>
						<key>value</key>
						<string>{query}</string>
						<key>words</key>
						<true/>
					</dict>
					<dict>
						<key>field</key>
						<string>kMDItemFinderComment</string>
						<key>not</key>
						<false/>
						<key>split</key>
						<true/>
						<key>value</key>
						<string>{query}</string>
						<key>words</key>
						<true/>
					</dict>
				</array>
				<key>includesystem</key>
				<false/>
				<key>keyword</key>
				<string>zemfile</string>
				<key>scopes</key>
				<array>
					<string>~/Dropbox/Articles</string>
				</array>
				<key>subtext</key>
				<string>Be sure to set the "Search Scope" of this workflow.</string>
				<key>title</key>
				<string>Select Blog Article to send to Zemanta</string>
				<key>types</key>
				<array>
					<string>net.daringfireball.markdown</string>
				</array>
				<key>withspace</key>
				<true/>
			</dict>
			<key>type</key>
			<string>alfred.workflow.input.filefilter</string>
			<key>uid</key>
			<string>153297E6-6820-4EAC-9D8F-3B8ACDBEFF8F</string>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>argumenttype</key>
				<integer>1</integer>
				<key>escaping</key>
				<integer>63</integer>
				<key>keyword</key>
				<string>zemapi</string>
				<key>script</key>
				<string>require 'init'

begin
  load_ruby_file("alfred.rb")
  Alfred = AlfredInit.new("{query}")

  load_ruby_file("settings-filter.rb")
rescue Exception =&gt; e
  slice = -1
  # Ignore final 2 lines of backtrace that always come from this file
  slice = -3 if e.backtrace.size &gt; 2
  bt = e.backtrace[0..slice].join("\n  ")
  console_log "#{e.message} (#{e.class}) [query: {query}]\n  " + bt
end</string>
				<key>subtext</key>
				<string>This should be your first action.</string>
				<key>title</key>
				<string>Set your Zemanta API Key</string>
				<key>type</key>
				<integer>2</integer>
				<key>withspace</key>
				<true/>
			</dict>
			<key>type</key>
			<string>alfred.workflow.input.scriptfilter</string>
			<key>uid</key>
			<string>4A3C299C-DE79-4240-9A52-5E90D0DA5EA1</string>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>plusspaces</key>
				<false/>
				<key>url</key>
				<string>{query}</string>
				<key>utf8</key>
				<true/>
			</dict>
			<key>type</key>
			<string>alfred.workflow.action.openurl</string>
			<key>uid</key>
			<string>D552693D-CC52-4AD8-98A6-AB7E6319C5FD</string>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>escaping</key>
				<integer>63</integer>
				<key>script</key>
				<string>require "init"

begin
  load_ruby_file("alfred.rb")
  Alfred = AlfredInit.new("{query}")

  load_ruby_file("main.rb")
rescue Exception =&gt; e
  slice = -1
  # Ignore final 2 lines of backtrace that always come from this file
  slice = -3 if e.backtrace.size &gt; 2
  bt = e.backtrace[0..slice].join("\n  ")
  console_log "#{e.message} (#{e.class}) [query: {query}]\n  " + bt
end</string>
				<key>type</key>
				<integer>2</integer>
			</dict>
			<key>type</key>
			<string>alfred.workflow.action.script</string>
			<key>uid</key>
			<string>02FB568E-3491-4B27-8D25-8E5D1E39C117</string>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>autopaste</key>
				<true/>
				<key>clipboardtext</key>
				<string></string>
			</dict>
			<key>type</key>
			<string>alfred.workflow.output.clipboard</string>
			<key>uid</key>
			<string>4A3C0EB8-C797-4B40-9FBB-AB9A7A7F9464</string>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>lastpathcomponent</key>
				<false/>
				<key>onlyshowifquerypopulated</key>
				<false/>
				<key>output</key>
				<integer>0</integer>
				<key>removeextension</key>
				<false/>
				<key>sticky</key>
				<false/>
				<key>text</key>
				<string>Zemanta Keywords copied to clipboard!</string>
				<key>title</key>
				<string>Keywords on clipboard</string>
			</dict>
			<key>type</key>
			<string>alfred.workflow.output.notification</string>
			<key>uid</key>
			<string>F30D875C-047D-4E58-ABB7-EBAD9A6FCD05</string>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>escaping</key>
				<integer>63</integer>
				<key>script</key>
				<string>require "init"

begin
  load_ruby_file("alfred.rb")
  Alfred = AlfredInit.new("{query}")

  load_ruby_file("settings.rb")
rescue Exception =&gt; e
  slice = -1
  # Ignore final 2 lines of backtrace that always come from this file
  slice = -3 if e.backtrace.size &gt; 2
  bt = e.backtrace[0..slice].join("\n  ")
  console_log "#{e.message} (#{e.class}) [query: {query}]\n  " + bt
end</string>
				<key>type</key>
				<integer>2</integer>
			</dict>
			<key>type</key>
			<string>alfred.workflow.action.script</string>
			<key>uid</key>
			<string>6CB930AD-9D72-4B4A-8789-640BBF36FBEB</string>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>lastpathcomponent</key>
				<false/>
				<key>onlyshowifquerypopulated</key>
				<false/>
				<key>output</key>
				<integer>0</integer>
				<key>removeextension</key>
				<false/>
				<key>sticky</key>
				<false/>
				<key>text</key>
				<string>Your API key has been stored safe and sound.</string>
				<key>title</key>
				<string>Settings updated</string>
			</dict>
			<key>type</key>
			<string>alfred.workflow.output.notification</string>
			<key>uid</key>
			<string>D697602E-E2AF-4500-8F66-54DC1D3D631F</string>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>escaping</key>
				<integer>63</integer>
				<key>script</key>
				<string>require "init"

begin
  load_ruby_file("alfred.rb")
  Alfred = AlfredInit.new("{query}")

  load_ruby_file("main.rb")
rescue Exception =&gt; e
  slice = -1
  # Ignore final 2 lines of backtrace that always come from this file
  slice = -3 if e.backtrace.size &gt; 2
  bt = e.backtrace[0..slice].join("\n  ")
  console_log "#{e.message} (#{e.class}) [query: {query}]\n  " + bt
end</string>
				<key>type</key>
				<integer>2</integer>
			</dict>
			<key>type</key>
			<string>alfred.workflow.action.script</string>
			<key>uid</key>
			<string>06C9C4A9-38CE-441A-8D06-E2F2D8B39B60</string>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>argumenttype</key>
				<integer>2</integer>
				<key>keyword</key>
				<string>zemclip</string>
				<key>subtext</key>
				<string>Position your cursor on the line you want the detected terms to be pasted.</string>
				<key>text</key>
				<string>Send the contents of the clipboard to Zemanta for processing.</string>
				<key>withspace</key>
				<false/>
			</dict>
			<key>type</key>
			<string>alfred.workflow.input.keyword</string>
			<key>uid</key>
			<string>923425B1-DD7D-4BC1-B930-6708F4083650</string>
		</dict>
	</array>
	<key>readme</key>
	<string>This workflow provides a variety of ways to send content to the Zemanta semantic tagging service. It supports taking a local file and uploading that completely as well as taking the contents of the clipboard an generating tags for that.

To setup, be sure to enter your Zemanta API key using the `zemapi` keyword. A link to generate those keys is provided through the keyword.

If you want to use the file-tagging capability, be sure to add a folder scope to the `zemfile` keyword.

Thanks to Duane Johnson his work on the alfred2-ruby-framework.</string>
	<key>uidata</key>
	<dict>
		<key>02FB568E-3491-4B27-8D25-8E5D1E39C117</key>
		<dict>
			<key>ypos</key>
			<real>160</real>
		</dict>
		<key>06C9C4A9-38CE-441A-8D06-E2F2D8B39B60</key>
		<dict>
			<key>ypos</key>
			<real>10</real>
		</dict>
		<key>153297E6-6820-4EAC-9D8F-3B8ACDBEFF8F</key>
		<dict>
			<key>ypos</key>
			<real>40</real>
		</dict>
		<key>289F82C2-5720-480D-93E8-4A074ED910CE</key>
		<dict>
			<key>ypos</key>
			<real>170</real>
		</dict>
		<key>4A3C0EB8-C797-4B40-9FBB-AB9A7A7F9464</key>
		<dict>
			<key>ypos</key>
			<real>290</real>
		</dict>
		<key>4A3C299C-DE79-4240-9A52-5E90D0DA5EA1</key>
		<dict>
			<key>ypos</key>
			<real>280</real>
		</dict>
		<key>6CB930AD-9D72-4B4A-8789-640BBF36FBEB</key>
		<dict>
			<key>ypos</key>
			<real>280</real>
		</dict>
		<key>923425B1-DD7D-4BC1-B930-6708F4083650</key>
		<dict>
			<key>ypos</key>
			<real>160</real>
		</dict>
		<key>D552693D-CC52-4AD8-98A6-AB7E6319C5FD</key>
		<dict>
			<key>ypos</key>
			<real>400</real>
		</dict>
		<key>D697602E-E2AF-4500-8F66-54DC1D3D631F</key>
		<dict>
			<key>ypos</key>
			<real>410</real>
		</dict>
		<key>F30D875C-047D-4E58-ABB7-EBAD9A6FCD05</key>
		<dict>
			<key>ypos</key>
			<real>40</real>
		</dict>
	</dict>
	<key>webaddress</key>
	<string>http://patricklenz.com/</string>
</dict>
</plist>
